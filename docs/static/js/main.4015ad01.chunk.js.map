{"version":3,"sources":["images/logo.png","components/CharacterCard.js","components/CharacterList.js","components/Filter.js","components/Home.js","components/CharacterDetail.js","components/App.js","services/fetchInfoSerie.js","index.js"],"names":["module","exports","CharacterCard","props","character","data","map","rol","className","key","id","alt","src","image","name","species","to","CharacterList","query","protoTypes","PropTypes","arrayOf","object","isRequired","string","Filter","action","value","htmlFor","type","onChange","Home","CharacterDetail","routerProps","characterId","parseInt","match","params","console","log","length","find","Fragment","status","origin","episode","App","localStorageData","getData","state","_getInitialState","saveData","bind","handleQuery","this","fetch","then","response","json","setState","characters","results","event","queryInput","currentTarget","JSON","parse","localStorage","getItem","setItem","stringify","filteredCharacters","filter","mycharacter","toUpperCase","includes","logo","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4015ad01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterCard.scss'\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n    const { data } = props;\n\n    const character = data\n        .map(rol => {\n            return (\n                <div className=\"card\" key={rol.id}>\n                    <img alt=\"\" src={rol.image}></img>\n                    <div className=\"cardInfoContent\">\n                        <h2 className=\"characterName\">{rol.name}</h2>\n                        <div className=\"footerCard\">\n                            <h3 className=\"characterSpecies\">{rol.species}</h3>\n                            <Link\n                                to={`/character-detail/${rol.id}`} className=\"characterDetailLink\">\n                                Ver detalle\n                              </Link>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    return (\n        <div className=\"listCharacters\">{character}</div>\n    )\n};\n\nCharacterCard.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string.isRequired\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard'\nimport '../stylesheets/CharacterList.scss'\nimport PropTypes from 'prop-types';\n\n\nconst CharacterList = props => {\n    const { data, query } = props;\n    //revisar logica, ul & li\n    return (\n        <ul>\n            <CharacterCard query={query} data={data} />\n        </ul>\n    )\n}\n\nCharacterList.protoTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string.isRequired\n};\n\nexport default CharacterList;","import React from 'react';\nimport '../stylesheets/Filter.scss';\nimport PropTypes from 'prop-types';\n\n\n\nconst Filter = props => {\n    const { action, value } = props;\n    return (\n        <div className=\"searchContainter\">\n            <label htmlFor=\"query\"></label>\n            <input type=\"text\" id=\"query\" onChange={action} value={value} className=\"searchBox\"></input>\n        </div>\n    )\n}\n\nFilter.propTypes = {\n    action: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default Filter;","import React from 'react'\nimport CharacterList from './CharacterList';\nimport '../stylesheets/Home.scss'\nimport PropTypes from 'prop-types';\nimport Filter from './Filter';\n\n\nconst Home = props => {\n    const { action, query, data } = props;\n\n    return (\n        <main>\n            <Filter action={action} value={query} />\n            <div>\n                <CharacterList data={data} />\n            </div>\n        </main>\n    )\n}\nHome.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string.isRequired,\n    action: PropTypes.object.isRequired,\n\n};\n\nexport default Home;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterDetail.scss'\nimport PropTypes from 'prop-types'\n\n\nconst CharacterDetail = props => {\n    const { routerProps, data } = props;\n    const characterId = parseInt(routerProps.match.params.characterId);\n    console.log(data.length)\n\n    if (characterId > data.length) {\n        return (\n            <div>\n                <p>Estos no son los personajes que est√°s buscando...</p>\n                <img alt=\"star wars meme\" src=\"http://i.imgur.com/zK1qu9H.jpg\"></img>\n            </div>\n\n        )\n    }\n\n    const character = data.find(character =>\n        character.id === characterId);\n    console.log(character)\n\n    return (\n        <React.Fragment>\n\n            <div className=\"cardDetail\"> <Link to=\"/\" className=\"homeLink\">Volver al listado</Link>\n\n                <div>\n                    <img alt={character} src={character.image} className=\"imgCardDetail\" />\n                </div>\n                <div className=\"infoCardDetailContainter\">\n                    <h2 className=\"characterNameDetail\">{character.name}</h2>\n                    <h3 className=\"characterSpeciesDetail\">Species: {character.status}</h3>\n                    <h3 className=\"characterOriginDetail\">Origin: {character.origin.name}</h3>\n                    <h3 className=\"characterEpisodesDetail\">Episodes: {character.episode.length}</h3>\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\nCharacterDetail.propTypes = {\n    routerProps: PropTypes.object.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default CharacterDetail;","import React from 'react';\nimport { fetchInfoSerie } from '../services/fetchInfoSerie';\nimport '../stylesheets/App.scss';\nimport logo from '../images/logo.png';\nimport Home from './Home'\nimport { Switch, Route } from 'react-router-dom'\nimport CharacterDetail from './CharacterDetail'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const localStorageData = this.getData();\n    this.state = localStorageData === null ? this._getInitialState() : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n\n  }\n  componentDidMount() {\n    this.getData();\n    this.saveData();\n  }\n\n  _getInitialState() {\n    fetchInfoSerie()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n          query: ''\n        })\n      })\n  }\n  handleQuery(event) {\n    let queryInput = event.currentTarget.value;\n    this.setState({\n      query: queryInput\n    },\n      this.saveData\n    )\n  };\n\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoRick\"));\n  }\n\n  saveData() {\n    localStorage.setItem(\"infoRick\", JSON.stringify(this.state));\n  }\n\n  render() {\n    debugger\n    if (this.state === null) {\n      return <p>Loading</p>\n    }\n    const filteredCharacters = this.state.characters.filter(mycharacter => {\n      return mycharacter.name.toUpperCase().includes(this.state.query.toUpperCase());\n    });\n\n    return (\n      <div className=\"app\">\n        <header className=\"header\"><img className=\"logo\" src={logo} alt=\"Web de Rick & Morty\" /></header>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                action={this.handleQuery}\n                query={this.state.query}\n                data={filteredCharacters}\n              />\n            )\n          }} />\n\n          <Route path=\"/character-detail/:characterId\" render={routerProps => {\n            return (\n              <CharacterDetail\n                routerProps={routerProps}\n                data={this.state.characters}\n              />\n            )\n          }} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\n\nconst fetchInfoSerie = () => {\n    return fetch(endpoint).then(response => response.json())\n}\n\nexport { fetchInfoSerie };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}