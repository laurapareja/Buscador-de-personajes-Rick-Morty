{"version":3,"sources":["images/logo.png","components/CharacterCard.js","components/CharacterList.js","components/Favorites.js","components/Filters.js","components/Home.js","components/CharacterDetail.js","components/App.js","services/fetchInfoSerie.js","index.js"],"names":["module","exports","CharacterCard","props","rol","favorites","name","category","includes","className","title","key","id","alt","src","image","species","to","CharacterList","data","map","character","index","renderList","protoTypes","PropTypes","arrayOf","object","isRequired","string","Favorites","actionFavorites","buttonStatus","info","checkedFavorite","onClick","event","Filters","action","value","htmlFor","type","onChange","Home","query","actionStatus","Fragment","CharacterDetail","routerProps","characterId","parseInt","match","params","length","find","specie","toLowerCase","status","favorite","origin","episode","App","localStorageData","getData","state","_getInitialState","saveData","bind","handleQuery","handleFavorite","handleQueryFavorites","this","fetch","then","response","json","setState","characters","results","JSON","parse","localStorage","getItem","setItem","stringify","queryInput","currentTarget","favoriteList","indexFavorite","indexOf","nameCharacter","splice","push","filteredCharacters","filter","mycharacter","toUpperCase","logo","exact","path","render","updateQueryStatus","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91d73f96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterCard.scss'\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n    const { rol, favorites } = props;\n\n    const name = rol.name;\n\n    const category = favorites.includes(name) ? <h3 className=\"characterDetailFavoriteCard\">Favorite <i className=\"fas fa-heart heartfavorite\" title='Favorite'></i></h3> : '';;\n\n    return (\n        <li className='card' key={rol.id}>\n            <img alt=\"\" src={rol.image}></img>\n            <div className=\"cardInfoContent\">\n                <h2 className=\"characterName\">{rol.name}</h2>\n                <div className=\"footerCard\">\n                    <h3 className=\"characterSpecies\">{rol.species}</h3>\n                    <Link\n                        to={`/character-detail/${rol.id}`} className=\"characterDetailLink\">\n                        Ver detalle\n                    </Link>\n                </div>\n                {category}\n            </div>\n        </li>\n    )\n};\n\nCharacterCard.propTypes = {\n    rol: PropTypes.object.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard'\nimport '../stylesheets/CharacterList.scss'\nimport PropTypes from 'prop-types';\n\n\nconst renderList = (data, favorites) => {\n    return data.map((character, index) => {\n        return <CharacterCard rol={character} key={index} favorites={favorites} />;\n    });\n};\n\nconst CharacterList = props => {\n    const { data, favorites } = props;\n    return <ul className=\"listCharacters\">{renderList(data, favorites)}</ul>\n};\n\n\nCharacterList.protoTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CharacterList;","import React from 'react';\nimport '../stylesheets/Favorites.scss';\nimport PropTypes from 'prop-types'\n\n\n\nconst Favorites = props => {\n    const { actionFavorites, info } = props;\n    const handleClickFavorite = (event) => {\n        actionFavorites(event)\n    }\n    const buttonStatus = info.checkedFavorite === true ? 'buttonclicked' : 'button';\n\n    return (\n        <div>\n            <button onClick={handleClickFavorite} className={buttonStatus}>\n                Ver favoritos\n            </button>\n        </div>\n    )\n}\n\nFavorites.propTypes = {\n    info: PropTypes.object.isRequired,\n};\n\nexport default Favorites;","import React from 'react';\nimport '../stylesheets/Filter.scss';\nimport PropTypes from 'prop-types';\nimport Favorites from './Favorites';\n\nconst Filters = props => {\n    const { action, value, data, actionFavorites, info } = props;\n    return (\n        <div className=\"searchContainter\">\n            <label htmlFor=\"query\"></label>\n            <input type=\"text\" id=\"query\" onChange={action} value={value} className=\"searchBox\"></input>\n            <Favorites data={data} actionFavorites={actionFavorites} info={info} />\n        </div>\n    )\n}\n\nFilters.propTypes = {\n    action: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Filters;","import React from 'react'\nimport CharacterList from './CharacterList';\nimport '../stylesheets/Home.scss'\nimport PropTypes from 'prop-types';\nimport Filters from './Filters';\n\n\nconst Home = props => {\n    const { action, query, data, favorites, actionFavorites, info, actionStatus } = props;\n\n    return (\n        <React.Fragment>\n            <main className=\"main\">\n                <Filters action={action} value={query} data={favorites} actionFavorites={actionFavorites} info={info} actionStatus={actionStatus} />\n                <div>\n                    <CharacterList data={data} favorites={favorites} />\n                </div>\n            </main>\n        </React.Fragment>\n    )\n}\nHome.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Home;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterDetail.scss'\nimport PropTypes from 'prop-types'\n\n\nconst CharacterDetail = props => {\n    const { routerProps, data, action, favorites } = props;\n    const characterId = parseInt(routerProps.match.params.characterId);\n\n    if (characterId > data.length) {\n        return (\n            <div>\n                <p className=\"messageError\">Estos no son los personajes que estás buscando...</p>\n                <img alt=\"star wars meme\" src=\"http://i.imgur.com/zK1qu9H.jpg\"></img>\n                <Link to=\"/\" className=\"homeLinkmessageError\">Volver al listado</Link>\n            </div>\n        )\n    }\n    const character = data.find(character =>\n        character.id === characterId);\n\n    // dependiendo de la especie/estatus/favoritos\n\n    const specie = character.species.toLowerCase() === 'human' ? <h3 className=\"characterDetail\">Human <i className=\"fas fa-child\" title='Human'></i></h3> : <h3 className=\"characterDetail\">Alien <i className=\"fab fa-reddit-alien\" title='Alien'></i></h3>;\n\n    const status = character.status.toLowerCase() === 'alive' ? <h3 className=\"characterDetail\">Alive <i className=\"fas fa-heartbeat\" title='Alive'></i></h3> : <h3 className=\"characterDetail\">Death <i className=\"fas fa-skull-crossbones\" title='Death'></i></h3>;\n\n    const favorite = favorites.includes(character.name) ? <h3 className=\"characterDetailFavorite\">Favorite <i className=\"fas fa-heart heartfavorite\" title='Favorite'></i></h3> : '';\n\n    //lifting, cambiamos el estado, añadiendo este personaje a favoritos\n    const handleClickFavorite = (event) => {\n        action(event);\n    }\n    return (\n        <React.Fragment>\n            <div className=\"cardDetail\"> <Link to=\"/\" className=\"homeLink\">Volver al listado</Link>\n                <div>\n                    <img alt={character} src={character.image} className=\"imgCardDetail\" />\n                </div>\n                <div className=\"infoCardDetailContainter\">\n                    <h2 className=\"characterNameDetail\">{character.name}</h2>\n                    {specie}\n                    <h3 className=\"characterDetail\">Origin: {character.origin.name}</h3>\n                    {status}\n                    <h3 className=\"characterDetail\">Episodes: {character.episode.length}</h3>\n                    {favorite}\n                    <button className=\"favoriteLink\" onClick={handleClickFavorite} value={character.name}>Favorito</button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\nCharacterDetail.propTypes = {\n    routerProps: PropTypes.object.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    action: PropTypes.func.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default CharacterDetail;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { fetchInfoSerie } from '../services/fetchInfoSerie';\nimport Home from './Home'\nimport CharacterDetail from './CharacterDetail'\nimport logo from '../images/logo.png';\nimport '../stylesheets/App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const localStorageData = this.getData();\n    this.state = localStorageData === null ? this._getInitialState() : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.handleFavorite = this.handleFavorite.bind(this);\n    this.handleQueryFavorites = this.handleQueryFavorites.bind(this);\n  }\n\n  //estado inicial antes de pintar\n  componentDidMount() {\n    this.getData();\n    this.saveData();\n  }\n  //obtengo datos del fetch y actualizo el estado\n  _getInitialState() {\n    fetchInfoSerie()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n          query: '',\n          favorites: [],\n          checkedFavorite: false,\n        })\n      })\n  }\n\n  //obtengo los datos del localstorage\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoRick\"));\n  }\n  //guardo los datos en el localstorage\n  saveData() {\n    localStorage.setItem(\"infoRick\", JSON.stringify(this.state));\n  }\n\n  //actualizo el estado con la búsqueda de nombre que hacemos en el input-text ./Filters\n  handleQuery(event) {\n    let queryInput = event.currentTarget.value;\n    this.setState({\n      query: queryInput\n    },\n      this.saveData\n    )\n  };\n\n  //actualizo el estado favoritos, incluyendo los elementos seleccionados/favoritos en ./CharacterDetail\n  handleFavorite(event) {\n    let favoriteList = this.state.favorites;\n    let favorite = event.currentTarget.value;\n\n    if (favoriteList.includes(favorite)) {\n      const indexFavorite = favoriteList.indexOf(nameCharacter => nameCharacter === favorite);\n      favoriteList.splice(indexFavorite, 1);\n    } else {\n      favoriteList.push(favorite);\n    }\n    // actualizo el estado\n    this.setState({\n      favorites: favoriteList\n    },\n      //guardo en localstorage\n      this.saveData\n    )\n  }\n\n  // actualizo búsqueda por favoritos cuando el usuario clicka botón/favorito en ./Filters\n  handleQueryFavorites(event) {\n    if (this.state.checkedFavorite === false) {\n      this.setState({\n        checkedFavorite: true\n      },\n        this.saveData\n      )\n    } else {\n      //actualizo el estado\n      this.setState({\n        checkedFavorite: false\n      },\n        //actualizo el localstorage\n        this.saveData\n      )\n    }\n  }\n\n  //renderizamos!\n  render() {\n    //cuando aún no tenemos estado, al abrir la página sin datos en localstorage& y aún está buscando la info en el fetch\n    if (this.state === null) {\n      return <p>Loading</p>\n    }\n    //los datos filtrados que vamos a pintar en el return\n    let filteredCharacters;\n\n    // cuando no hemos clickado al boton favoritos ./Filters devolvemos los elementos filtrados por el buscador input-text\n    if (this.state.checkedFavorite === false && this.state.query !== null) {\n      filteredCharacters = this.state.characters\n        .filter(mycharacter => {\n          return mycharacter.name.toUpperCase().includes(this.state.query.toUpperCase())\n        });\n    } else { // cuando clickamos boton favoritos ./Filters se hacen ambos filtros\n      filteredCharacters = this.state.characters\n        .filter(mycharacter => {\n          return this.state.favorites.includes(mycharacter.name);\n        })\n        .filter(mycharacter => {\n          return mycharacter.name.toUpperCase().includes(this.state.query.toUpperCase())\n        })\n    }\n\n    return (\n      <div className=\"app\">\n        <header className=\"header\"><img className=\"logo\" src={logo} alt=\"Web de Rick & Morty\" /></header>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                action={this.handleQuery}\n                query={this.state.query}\n                data={filteredCharacters}\n                info={this.state}\n                favorites={this.state.favorites}\n                actionFavorites={this.handleQueryFavorites}\n                actionStatus={this.updateQueryStatus}\n              />\n            )\n          }} />\n\n          <Route path=\"/character-detail/:characterId\" render={routerProps => {\n            return (\n              <CharacterDetail\n                routerProps={routerProps}\n                data={this.state.characters}\n                action={this.handleFavorite}\n                favorites={this.state.favorites}\n              />\n            )\n          }} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\n\nconst fetchInfoSerie = () => {\n    return fetch(endpoint).then(response => response.json())\n}\n\nexport { fetchInfoSerie };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}