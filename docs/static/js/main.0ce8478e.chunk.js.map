{"version":3,"sources":["images/logo.png","components/CharacterCard.js","components/CharacterList.js","components/Favorites.js","components/Filters.js","components/Home.js","components/CharacterDetail.js","components/App.js","services/fetchInfoSerie.js","index.js"],"names":["module","exports","CharacterCard","props","rol","favorites","name","category","includes","className","title","key","id","alt","src","image","species","to","CharacterList","data","map","character","index","renderList","protoTypes","PropTypes","arrayOf","object","isRequired","string","Favorites","actionFavorites","info","console","log","checkedFavorite","buttonStatus","onClick","event","Filters","action","value","htmlFor","type","onChange","Home","query","Fragment","CharacterDetail","routerProps","characterId","parseInt","match","params","length","find","specie","toLowerCase","status","origin","episode","App","localStorageData","getData","state","_getInitialState","saveData","bind","handleQuery","handleFavorite","handleQueryFavorites","this","fetch","then","response","json","setState","characters","results","queryInput","currentTarget","favoriteList","favorite","indexFavorite","indexOf","nameCharacter","splice","push","JSON","parse","localStorage","getItem","setItem","stringify","filteredCharacters","filter","mycharacter","toUpperCase","logo","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0ce8478e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterCard.scss'\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = props => {\n    const { rol, favorites } = props;\n\n    const name = rol.name;\n\n    const category = favorites.includes(name) ? <h3 className=\"characterDetailFavoriteCard\">Favorite <i className=\"fas fa-heart heartfavorite\" title='Favorite'></i></h3> : '';;\n\n    return (\n        <li className='card' key={rol.id}>\n            <img alt=\"\" src={rol.image}></img>\n            <div className=\"cardInfoContent\">\n                <h2 className=\"characterName\">{rol.name}</h2>\n                <div className=\"footerCard\">\n                    <h3 className=\"characterSpecies\">{rol.species}</h3>\n                    <Link\n                        to={`/character-detail/${rol.id}`} className=\"characterDetailLink\">\n                        Ver detalle\n                    </Link>\n                </div>\n                {category}\n            </div>\n        </li>\n    )\n};\n\nCharacterCard.propTypes = {\n    rol: PropTypes.object.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n};\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard'\nimport '../stylesheets/CharacterList.scss'\nimport PropTypes from 'prop-types';\n\n\nconst renderList = (data, favorites) => {\n    return data.map((character, index) => {\n        return <CharacterCard rol={character} key={index} favorites={favorites} />;\n    });\n};\n\nconst CharacterList = props => {\n    const { data, favorites } = props;\n    return <ul className=\"listCharacters\">{renderList(data, favorites)}</ul>\n};\n\n\nCharacterList.protoTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CharacterList;","import React from 'react';\nimport '../stylesheets/Favorites.scss';\nimport PropTypes from 'prop-types'\n\n\n\nconst Favorites = props => {\n    const { actionFavorites, info } = props;\n    console.log(info.checkedFavorite)\n    const handleClickFavorite = (event) => {\n        actionFavorites(event)\n    }\n\n    const buttonStatus = info.checkedFavorite === true ? 'buttonclicked' : 'button';\n\n    return (\n        <div>\n            <button onClick={handleClickFavorite} className={buttonStatus}>\n                Ver favoritos\n            </button>\n        </div>\n    )\n}\n\nFavorites.propTypes = {\n    actionFavorite: PropTypes.func.isRequired,\n};\n\nexport default Favorites;","import React from 'react';\nimport '../stylesheets/Filter.scss';\nimport PropTypes from 'prop-types';\nimport Favorites from './Favorites';\n\n\n\nconst Filters = props => {\n    const { action, value, data, actionFavorites, info } = props;\n    return (\n        <div className=\"searchContainter\">\n            <label htmlFor=\"query\"></label>\n            <input type=\"text\" id=\"query\" onChange={action} value={value} className=\"searchBox\"></input>\n            {/* quitar data si no lo uso */}\n            <Favorites data={data} actionFavorites={actionFavorites} info={info} />\n        </div>\n    )\n}\n\nFilters.propTypes = {\n    action: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.string).isRequired,\n    // actionFavorite: PropTypes.func.isRequired,\n\n};\n\nexport default Filters;","import React from 'react'\nimport CharacterList from './CharacterList';\nimport '../stylesheets/Home.scss'\nimport PropTypes from 'prop-types';\nimport Filters from './Filters';\n\n\nconst Home = props => {\n    const { action, query, data, favorites, actionFavorites, info } = props;\n\n    return (\n        <React.Fragment>\n            <Filters action={action} value={query} data={favorites} actionFavorites={actionFavorites} info={info} />\n            <main className=\"main\">\n                <div>\n                    <CharacterList data={data} favorites={favorites} />\n                </div>\n            </main>\n        </React.Fragment>\n    )\n}\nHome.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Home;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/CharacterDetail.scss'\nimport PropTypes from 'prop-types'\n\n\nconst CharacterDetail = props => {\n    const { routerProps, data, action, favorites } = props;\n    const characterId = parseInt(routerProps.match.params.characterId);\n\n    if (characterId > data.length) {\n        return (\n            <div>\n                <p className=\"messageError\">Estos no son los personajes que estás buscando...</p>\n                <img alt=\"star wars meme\" src=\"http://i.imgur.com/zK1qu9H.jpg\"></img>\n                <Link to=\"/\" className=\"homeLinkmessageError\">Volver al listado</Link>\n            </div>\n        )\n    }\n    const character = data.find(character =>\n        character.id === characterId);\n\n    const specie = character.species.toLowerCase() === 'human' ? <h3 className=\"characterDetail\">Human <i className=\"fas fa-child\" title='Human'></i></h3> : <h3 className=\"characterDetail\">Alien <i className=\"fab fa-reddit-alien\" title='Alien'></i></h3>;\n\n    const status = character.status.toLowerCase() === 'alive' ? <h3 className=\"characterDetail\">Alive <i className=\"fas fa-heartbeat\" title='Alive'></i></h3> : <h3 className=\"characterDetail\">Death <i className=\"fas fa-skull-crossbones\" title='Death'></i></h3>;\n\n    const category = favorites.includes(character.name) ? <h3 className=\"characterDetailFavorite\">Favorite <i className=\"fas fa-heart heartfavorite\" title='Favorite'></i></h3> : '';;\n\n    const handleClick = (event) => {\n        action(event);\n    }\n    return (\n        <React.Fragment>\n\n            <div className=\"cardDetail\"> <Link to=\"/\" className=\"homeLink\">Volver al listado</Link>\n                <div>\n                    <img alt={character} src={character.image} className=\"imgCardDetail\" />\n                </div>\n                <div className=\"infoCardDetailContainter\">\n                    <h2 className=\"characterNameDetail\">{character.name}</h2>\n                    {specie}\n                    <h3 className=\"characterDetail\">Origin: {character.origin.name}</h3>\n                    {status}\n                    <h3 className=\"characterDetail\">Episodes: {character.episode.length}</h3>\n                    {category}\n                    <button className=\"favoriteLink\" onClick={handleClick} value={character.name}>Favorito</button>\n                </div>\n            </div>\n        </React.Fragment>\n\n    )\n}\nCharacterDetail.propTypes = {\n    routerProps: PropTypes.object.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    action: PropTypes.func.isRequired,\n    favorites: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default CharacterDetail;","import React from 'react';\nimport { fetchInfoSerie } from '../services/fetchInfoSerie';\nimport '../stylesheets/App.scss';\nimport logo from '../images/logo.png';\nimport Home from './Home'\nimport { Switch, Route } from 'react-router-dom'\nimport CharacterDetail from './CharacterDetail'\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const localStorageData = this.getData();\n    this.state = localStorageData === null ? this._getInitialState() : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n    this.handleQuery = this.handleQuery.bind(this);\n    this.handleFavorite = this.handleFavorite.bind(this);\n    this.handleQueryFavorites = this.handleQueryFavorites.bind(this);\n\n\n  }\n  componentDidMount() {\n    this.getData();\n    this.saveData();\n  }\n\n  _getInitialState() {\n    fetchInfoSerie()\n      .then(data => {\n        this.setState({\n          characters: data.results,\n          query: '',\n          favorites: [],\n          checkedFavorite: false\n        })\n      })\n  }\n\n  handleQuery(event) {\n    let queryInput = event.currentTarget.value;\n    this.setState({\n      query: queryInput\n    },\n      this.saveData\n    )\n  };\n\n  handleFavorite(event) {\n    let favoriteList = this.state.favorites;\n    let favorite = event.currentTarget.value;\n\n    if (favoriteList.includes(favorite)) {\n      const indexFavorite = favoriteList.indexOf(nameCharacter => nameCharacter === favorite);\n      favoriteList.splice(indexFavorite, 1);\n    } else {\n      favoriteList.push(favorite);\n    }\n\n    this.setState({\n      favorites: favoriteList\n    },\n      this.saveData\n    )\n    console.log(this.state);\n\n  }\n\n  handleQueryFavorites(event) {\n    if (this.state.checkedFavorite === false) {\n      this.setState({\n        checkedFavorite: true\n      },\n        this.saveData\n      )\n    } else {\n      this.setState({\n        checkedFavorite: false\n      },\n        this.saveData\n      )\n    }\n  }\n\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoRick\"));\n  }\n\n  saveData() {\n    localStorage.setItem(\"infoRick\", JSON.stringify(this.state));\n  }\n\n  render() {\n    if (this.state === null) {\n      return <p>Loading</p>\n    }\n    let filteredCharacters;\n\n    console.log(this.state.checkedFavorite)\n\n\n    if (this.state.checkedFavorite === false && this.state.query !== null) {\n      filteredCharacters = this.state.characters\n        .filter(mycharacter => {\n          return mycharacter.name.toUpperCase().includes(this.state.query.toUpperCase())\n        });\n    } else {\n      filteredCharacters = this.state.characters\n        .filter(mycharacter => {\n          return this.state.favorites.includes(mycharacter.name);\n        })\n        .filter(mycharacter => {\n          return mycharacter.name.toUpperCase().includes(this.state.query.toUpperCase())\n        })\n    }\n\n\n    // if (this.handleQueryFavorites) {\n    //   filteredCharacters = this.state.characters.filter(mycharacter => {\n    //     return this.state.favorites.includes(mycharacter.name);\n    //   })\n    // }\n\n    return (\n      <div className=\"app\">\n        <header className=\"header\"><img className=\"logo\" src={logo} alt=\"Web de Rick & Morty\" /></header>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            return (\n              <Home\n                action={this.handleQuery}\n                query={this.state.query}\n                data={filteredCharacters}\n                info={this.state}\n                favorites={this.state.favorites}\n                actionFavorites={this.handleQueryFavorites}\n              />\n            )\n          }} />\n\n          <Route path=\"/character-detail/:characterId\" render={routerProps => {\n            return (\n              <CharacterDetail\n                routerProps={routerProps}\n                data={this.state.characters}\n                action={this.handleFavorite}\n                favorites={this.state.favorites}\n              />\n            )\n          }} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const endpoint = \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\n\nconst fetchInfoSerie = () => {\n    return fetch(endpoint).then(response => response.json())\n}\n\nexport { fetchInfoSerie };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}